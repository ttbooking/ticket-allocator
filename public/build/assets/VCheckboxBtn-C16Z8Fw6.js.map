{"version":3,"file":"VCheckboxBtn-C16Z8Fw6.js","sources":["../../../node_modules/vuetify/lib/components/VCheckbox/VCheckboxBtn.js"],"sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Components\nimport { makeVSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.js\"; // Composables\nimport { IconValue } from \"../../composables/icons.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\nimport { toRef } from 'vue';\nimport { genericComponent, omit, propsFactory, useRender } from \"../../util/index.js\"; // Types\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate'\n  },\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn'\n  })\n}, 'VCheckboxBtn');\nexport const VCheckboxBtn = genericComponent()({\n  name: 'VCheckboxBtn',\n  props: makeVCheckboxBtnProps(),\n  emits: {\n    'update:modelValue': value => true,\n    'update:indeterminate': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const indeterminate = useProxiedModel(props, 'indeterminate');\n    const model = useProxiedModel(props, 'modelValue');\n    function onChange(v) {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    const falseIcon = toRef(() => {\n      return indeterminate.value ? props.indeterminateIcon : props.falseIcon;\n    });\n    const trueIcon = toRef(() => {\n      return indeterminate.value ? props.indeterminateIcon : props.trueIcon;\n    });\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue']);\n      return _createVNode(VSelectionControl, _mergeProps(controlProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": [$event => model.value = $event, onChange],\n        \"class\": ['v-checkbox-btn', props.class],\n        \"style\": props.style,\n        \"type\": \"checkbox\",\n        \"falseIcon\": falseIcon.value,\n        \"trueIcon\": trueIcon.value,\n        \"aria-checked\": indeterminate.value ? 'mixed' : undefined\n      }), slots);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCheckboxBtn.js.map"],"names":["makeVCheckboxBtnProps","propsFactory","IconValue","makeVSelectionControlProps","VCheckboxBtn","genericComponent","value","props","_ref","slots","indeterminate","useProxiedModel","model","onChange","v","falseIcon","toRef","trueIcon","useRender","controlProps","omit","VSelectionControl","_createVNode","_mergeProps","$event"],"mappings":"0JAOY,MAACA,EAAwBC,EAAa,CAChD,cAAe,QACf,kBAAmB,CACjB,KAAMC,EACN,QAAS,wBACV,EACD,GAAGC,EAA2B,CAC5B,UAAW,eACX,SAAU,aACX,CAAA,CACH,EAAG,cAAc,EACJC,EAAeC,EAAgB,EAAG,CAC7C,KAAM,eACN,MAAOL,EAAuB,EAC9B,MAAO,CACL,oBAAqBM,GAAS,GAC9B,uBAAwBA,GAAS,EAClC,EACD,MAAMC,EAAOC,EAAM,CACjB,GAAI,CACF,MAAAC,CACN,EAAQD,EACJ,MAAME,EAAgBC,EAAgBJ,EAAO,eAAe,EACtDK,EAAQD,EAAgBJ,EAAO,YAAY,EACjD,SAASM,EAASC,EAAG,CACfJ,EAAc,QAChBA,EAAc,MAAQ,GAE9B,CACI,MAAMK,EAAYC,EAAM,IACfN,EAAc,MAAQH,EAAM,kBAAoBA,EAAM,SAC9D,EACKU,EAAWD,EAAM,IACdN,EAAc,MAAQH,EAAM,kBAAoBA,EAAM,QAC9D,EACD,OAAAW,EAAU,IAAM,CACd,MAAMC,EAAeC,EAAKC,EAAkB,YAAYd,CAAK,EAAG,CAAC,YAAY,CAAC,EAC9E,OAAOe,EAAaD,EAAmBE,EAAYJ,EAAc,CAC/D,WAAcP,EAAM,MACpB,sBAAuB,CAACY,GAAUZ,EAAM,MAAQY,EAAQX,CAAQ,EAChE,MAAS,CAAC,iBAAkBN,EAAM,KAAK,EACvC,MAASA,EAAM,MACf,KAAQ,WACR,UAAaQ,EAAU,MACvB,SAAYE,EAAS,MACrB,eAAgBP,EAAc,MAAQ,QAAU,MACjD,CAAA,EAAGD,CAAK,CACf,CAAK,EACM,CAAE,CACb,CACA,CAAC","x_google_ignoreList":[0]}